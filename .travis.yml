sudo: false
branches:
  only:
    - develop
env:
  global:
    - TRAVIS_NODE_VERSION="8"
    - ADB_INSTALL_TIMEOUT=8
    - ABI=armeabi-v7a
    - EMU_FLAVOR=default
    - ANDROID_HOME=/usr/local/android-sdk
    - TOOLS=${ANDROID_HOME}/tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
  matrix:
   - API=21
  matrix:
    fast_finish: true # We can report success without waiting for these
    
android:
  components:
    # installing tools to start, then use `sdkmanager` below to get the rest
    - tools

licenses:
    - 'android-sdk-preview-license-.+'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'
    
# Emulator Management: Create, Start and Wait
install:
  - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install ${TRAVIS_NODE_VERSION}
  - node --version
  - if [[ "$PLATFORM" =~ android ]]; then gradle --version; fi
  - echo y | sdkmanager "platform-tools" >/dev/null
  - echo y | sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
  - echo y | sdkmanager "build-tools;28.0.2" >/dev/null # Implicit gradle dependency - gradle drives changes
  - echo y | sdkmanager "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
  - echo y | sdkmanager "platforms;android-26" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties
  - echo y | sdkmanager "extras;android;m2repository" >/dev/null
  - echo y | sdkmanager "system-images;android-$API;$EMU_FLAVOR;$ABI" >/dev/null # install our emulator
  - echo no | avdmanager create avd --force -n test -k "system-images;android-$API;$EMU_FLAVOR;$ABI" -c 10M
  - emulator -avd test -engine classic -no-window $AUDIO -camera-back none -camera-front none -selinux permissive -qemu -m 1536 &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
  - git clone https://github.com/apache/cordova-paramedic /tmp/paramedic && pushd /tmp/paramedic && npm install && popd
  - npm install -g cordova
  - npm install
       
# before_install:
#   - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install ${TRAVIS_NODE_VERSION}
#   - node --version
#   - if [[ "$PLATFORM" =~ android ]]; then gradle --version; fi
#   - if [[ "$PLATFORM" =~ android ]]; then echo y | android update sdk -u --filter android-22,android-23,android-24,android-25,android-26,android-27,android-28; fi
#    # Install SDK license so Android Gradle plugin can install deps.
#   - mkdir "$ANDROID_HOME/licenses" || true
#   - echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-license"
#   # Install the rest of tools (e.g., avdmanager).
#   - echo yes | sdkmanager tools
#   - echo yes | sdkmanager "system-images;android-26;default;x86_64"
#   - echo no | avdmanager  create avd -n emulator_name -k "system-images;android-26;default;x86_64" -g "default"
#   - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &
#   - android-wait-for-emulator
#   - adb shell input keyevent 82 &
#   - git clone https://github.com/apache/cordova-paramedic /tmp/paramedic && pushd /tmp/paramedic && npm install && popd
#   - npm install -g cordova

script:
  - node /tmp/paramedic/main.js --platform=android --action=run --cleanUpAfterRun=true --verbose=true --plugin $(pwd)
